name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Installing the dependencies
      run: |
        sudo apt update
        sudo apt install libssl-dev g++ cmake make libfuse2 -y

    - name: Build the project
      run: |
        chmod +x misc/dist/install-appimage.sh
        misc/dist/install-appimage.sh

    - name: Zipping files
      run: |
        cd build/vlib
        zip -r vlib-linux-gcc-v0.1.2-alpha.zip .
    
    - name: Uploading the artifacts
      uses: actions/upload-artifact@v2
      with:
        name: vlib-linux-gcc-v0.1.2-alpha
        path: vlib-linux-gcc-v0.1.2-alpha.zip

    # - name: Building the AppImage for vpack
    #   uses: AppImageCrafters/build-appimage@master
    #   with:
    #     recipe: "./misc/scripts/AppImageBuilder_vpack.yml"
    #   env:
    #     UPDATE_INFO: gh-releases-zsync|GhostVaibhav|vupdate|latest|*x86_64.AppImage.zsync

    # - name: Building the AppImage for vupdate
    #   uses: AppImageCrafters/build-appimage@master
    #   with:
    #     recipe: "./misc/scripts/AppImageBuilder_vupdate.yml"
    #   env:
    #     UPDATE_INFO: gh-releases-zsync|GhostVaibhav|vupdate|latest|*x86_64.AppImage.zsync
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          .build/vlib/vlib-linux-gcc-v0.1.2-alpha.zip
        tag_name: ${{ github.ref }}
        body: |
          This is an automated release of the ${{ github.ref }} tag.
          The binaries were built on ${{ matrix.os }} using the ${{ matrix.compiler }} compiler.
        draft: true
